<log4net>
	<appender name="DebuggerAppender" type="log4net.Appender.DebugAppender">
		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="%5level [%.10class] - %message%newline"/>
			<!--<conversionPattern value="%newline%file (%line): %level: %message%newline"/>-->
		</layout>
		<filter type="log4net.Filter.LevelRangeFilter">
			<levelMin value="DEBUG"/>
			<levelMax value="FATAL"/>
		</filter>
	</appender>

	<appender name="Console" type="log4net.Appender.ConsoleAppender">
		<layout type="log4net.Layout.PatternLayout">
			<!-- Pattern to output the caller's file name and line number -->
			<!--<conversionPattern value="%5level [%thread] (%file:%line) - %message%newline" />-->
			<conversionPattern value="%5level [%.10class] - %message%newline"/>
		</layout>

		<!--<filter type="log4net.Filter.LoggerMatchFilter">
				<loggerToMatch value="MiNET.ServerInfo" />
				<acceptOnMatch value="false" />
			</filter>-->

		<filter type="log4net.Filter.LevelRangeFilter">
			<levelMin value="WARN"/>
			<levelMax value="FATAL"/>
		</filter>

	</appender>

	<appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
		<file value="minetlog.log"/>
		<appendToFile value="true"/>
		<maximumFileSize value="10000KB"/>
		<maxSizeRollBackups value="2"/>

		<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
		</layout>

		<!--<filter type="log4net.Filter.LoggerMatchFilter">
				<loggerToMatch value="MiNET.Net.Datagram" />
				<acceptOnMatch value="false" />
			</filter>-->

		<!--<filter type="log4net.Filter.LoggerMatchFilter">
				<loggerToMatch value="MiNET.ServerInfo" />
				<acceptOnMatch value="false" />
			</filter>-->

		<filter type="log4net.Filter.LevelRangeFilter">
			<levelMin value="DEBUG"/>
			<levelMax value="FATAL"/>
		</filter>

	</appender>

	<root>
		<level value="DEBUG"/>
		<appender-ref ref="Console"/>
		<appender-ref ref="RollingFile"/>
		<!--<appender-ref ref="DebuggerAppender"/>-->
	</root>
</log4net>
